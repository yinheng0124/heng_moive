# 日志级别TRACE<DEBUG < INFO < WARN < ERROR < FATAL  （CONSOLE,file 输入位置）
log4j.rootLogger=INFO,CONSOLE,file
#log4j.rootLogger=ERROR,ROLLING_FILE
#指定具体包类输出级别
log4j.logger.com=debug

######################################################################################
# Console Appender  \u65e5\u5fd7\u5728\u63a7\u5236\u8f93\u51fa\u914d\u7f6e
######################################################################################
#输出到控制台
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
#Threshold是个全局的过滤器，它将把低于所设置的level的信息过滤不显示出来
log4j.appender.Threshold=error
#打印输出
log4j.appender.CONSOLE.Target=System.out
#自定义格式化   %p输出日志信息的级别  %d日期   %c输出日志信息所属的类目，就是所在类的全名  %m输出代码中具体日志信息  %n换行
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.layout.ConversionPattern= [%p] %d %c - %m%n


######################################################################################
# DailyRolling File  \u6bcf\u5929\u4ea7\u751f\u4e00\u4e2a\u65e5\u5fd7\u6587\u4ef6\uff0c\u6587\u4ef6\u540d\u683c\u5f0f:log2009-09-11
######################################################################################
#DailyRollingFileAppender 按周期生成文件
log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
log4j.appender.file.DatePattern=yyyy-MM-dd hh:mm:ss
log4j.appender.file.File=logs/ssm.log
log4j.appender.file.Append=true
log4j.appender.file.Threshold=INFO
log4j.appender.file.layout=org.apache.log4j.PatternLayout
#%d	输出日志时间点的日期或时间，指定格式，如%d{yyyy MM dd HH:mm:ss}
#%p	输出日志级别，即DEBUG，INFO，WARN，ERROR，FATAL  
#%F	 输出日志消息产生时所在的文件名称 
#%L	 输出代码中的行号
#%m	输出代码中指定的消息,产生的日志具体信息
#%n	输出一个回车换行符，Windows平台为"\r\n"，Unix平台为"\n"
log4j.appender.file.layout.ConversionPattern=%d{yyyy-M-d HH:mm:ss}%x[%5p](%F:%L) %m%n


log4j.logger.com.opensymphony.xwork2=error  
